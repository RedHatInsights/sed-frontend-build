{"version":3,"file":"js/741.29d7c98907ef7a723c6a.js","mappings":"2KAIgBA,E,QAAUC,GAEpBC,GAAYC,EAAAA,EAAAA,OAAK,kBACrB,4EAGWC,EAAS,kBACpB,kBAAC,EAAAC,SAAD,CACEC,SACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,QAAD,QAIJ,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,KAAMX,EAAMY,UAAWC,UAAWX,O,iCCc/C,QAzBY,WAAM,IACRY,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAA3BF,YACFG,GAAUC,EAAAA,EAAAA,cAgBhB,OAfAC,EAAAA,EAAAA,YAAU,WACRL,IAAcM,SAAS,CAAEC,cAAeC,EAAAA,OACvC,CAACR,KACJK,EAAAA,EAAAA,YAAU,WACRI,SAASC,OAAOC,OAEhBF,SAASC,OAAOE,YAAY,aAC5B,IAAMC,EAAaJ,SAASC,OAAOI,GAAG,kBAAkB,SAACC,GAAD,OACtDZ,EAAQa,KAAR,WAAiBD,EAAME,WAEzB,OAAO,WACLJ,OAED,IAGD,kBAAC,EAAAK,SAAD,KACE,kBAAC,KAAD,MACA,kBAAC5B,EAAD,S,oGCtBOY,GAAkBiB,EAAAA,EAAAA,eAAc,CAC3CnB,YAAa,eAGR,SAASW,IAAoB,2BAAZS,EAAY,yBAAZA,EAAY,gBAMlC,OALWpB,EAAAA,EAAAA,IAAY,GAAD,CACpBqB,KACAC,EAAAA,EAAAA,IAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAFtC,OAGjBH,M","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/store/index.js"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport pckg from '../package.json';\nconst { routes: paths } = pckg;\n\nconst Dashboard = lazy(() =>\n  import(/* webpackChunkName: \"Dashboard\" */ './Routes/Dashboard')\n);\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path={paths.connector} component={Dashboard} />\n    </Switch>\n  </Suspense>\n);\n","import React, { Fragment, useEffect, useContext } from 'react';\nimport { Routes } from './Routes';\n\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { RegistryContext } from './store';\nimport { useHistory } from 'react-router-dom';\n\nconst App = () => {\n  const { getRegistry } = useContext(RegistryContext);\n  const history = useHistory();\n  useEffect(() => {\n    getRegistry().register({ notifications: notificationsReducer });\n  }, [getRegistry]);\n  useEffect(() => {\n    insights.chrome.init();\n\n    insights.chrome.identifyApp('connector');\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n    return () => {\n      unregister();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes />\n    </Fragment>\n  );\n};\nexport default App;\n","import { createContext } from 'react';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n"],"names":["paths","pckg","Dashboard","lazy","Routes","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","connector","component","getRegistry","useContext","RegistryContext","history","useHistory","useEffect","register","notifications","notificationsReducer","insights","chrome","init","identifyApp","unregister","on","event","push","navId","Fragment","createContext","middleware","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}