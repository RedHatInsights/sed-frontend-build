{"version":3,"file":"js/1915.1666698178727.bb5b9fdf39b1fce0cfc0.js","mappings":"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","sources":["webpack:///./src/hooks/useRbacPermissions.js","webpack:///./src/utils/platformServices.js","webpack:///./src/Components/Authentication/Authentication.js","webpack:///./src/hooks/useUser.js","webpack:///./src/Components/shared/breadcrumbs.js","webpack:///./src/Components/AdditionalRepositoriesTable/NoAdditionalRepositories.js","webpack:///./src/Components/AdditionalRepositoriesTable/AdditionalRepositoriesTable.js","webpack:///./src/Components/ActivationKey/AdditionalRepositoriesCard.js","webpack:///./src/Components/ActivationKey/SystemPurposeCard.js","webpack:///./src/Components/ActivationKey/WorkloadCard.js","webpack:///./src/Components/ActivationKey/DeleteButton.js","webpack:///./src/Components/NoAccessPopover/NoAccessPopover.js","webpack:///./src/Components/NoAccessPopover/index.js","webpack:///./src/Components/ActivationKey/ActivationKey.js","webpack:///./src/Routes.js","webpack:///./src/Components/Notifications/Notifications.js","webpack:///./src/App.js","webpack:///./src/Components/ActivationKeys/no-access.js","webpack:///./src/Components/LoadingState/Loading.js","webpack:///./src/hooks/useDeleteActivationKey.js","webpack:///./src/Components/Modals/DeleteActivationKeyConfirmationModal.js","webpack:///./src/contexts/NotificationProvider.js","webpack:///./src/hooks/useActivationKey.js","webpack:///./src/hooks/useFeatureFlag.js","webpack:///./src/hooks/useNotifications.js","webpack:///./src/store/index.js"],"sourcesContent":["import { useQuery } from 'react-query';\n\nconst getUserRbacPermissions = async () => {\n  return Promise.resolve(\n    window.insights.chrome.getUserPermissions('config-manager')\n  ).then((rawRbacPermissions) => {\n    const permissions = rawRbacPermissions.map(\n      (rawPermission) => rawPermission.permission\n    );\n    const rbacPermissions = {\n      canReadActivationKeys:\n        permissions.includes('config-manager:activation_keys:read') ||\n        permissions.includes('config-manager:activation_keys:*'),\n      canWriteActivationKeys:\n        permissions.includes('config-manager:activation_keys:write') ||\n        permissions.includes('config-manager:activation_keys:*'),\n    };\n\n    return rbacPermissions;\n  });\n};\n\nconst useRbacPermissions = () => {\n  return useQuery('rbac_permissions', () => getUserRbacPermissions());\n};\n\nexport { getUserRbacPermissions, useRbacPermissions as default };\n","const authenticateUser = () => {\n  try {\n    return window.insights.chrome.auth.getUser();\n  } catch (e) {\n    throw new Error(`Error authenticating user: ${e.message}`);\n  }\n};\n\nexport { authenticateUser };\n","import React, { useEffect } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useLocation } from 'react-router-dom';\nimport useUser from '../../hooks/useUser';\nimport Loading from '../LoadingState/Loading';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport propTypes from 'prop-types';\nconst Authentication = ({ children }) => {\n  const queryClient = useQueryClient();\n  const location = useLocation();\n\n  const { isLoading, isFetching, isSuccess, isError } = useUser();\n\n  useEffect(() => {\n    isSuccess && window.insights?.chrome?.hideGlobalFilter();\n  }, [isSuccess]);\n\n  useEffect(() => {\n    /**\n     * On every rerender, based on URL change (location.pathname),\n     * reset the user's status to loading before authenticating again.\n     */\n    queryClient.invalidateQueries('user');\n  }, [location.pathname]);\n\n  if (isError === true) {\n    return <Unavailable />;\n  } else if (isLoading === true || isFetching === true) {\n    return <Loading />;\n  } else if (isSuccess === true) {\n    return <>{children}</>;\n  }\n};\n\nAuthentication.propTypes = {\n  children: propTypes.object,\n};\n\nexport default Authentication;\n","import { useQuery } from 'react-query';\nimport { getUserRbacPermissions } from '../hooks/useRbacPermissions';\nimport { authenticateUser } from '../utils/platformServices';\n\nconst getUser = () => {\n  return Promise.all([authenticateUser(), getUserRbacPermissions()]).then(\n    ([userStatus, rbacPermissions]) => {\n      const user = {\n        accountNumber: userStatus.identity.account_number,\n        orgId: userStatus?.identity?.internal?.org_id,\n        rbacPermissions: rbacPermissions,\n      };\n      return user;\n    }\n  );\n};\n\nconst useUser = () => {\n  return useQuery('user', () => getUser());\n};\n\nexport { getUser, useUser as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\n\nconst Breadcrumbs = (breadcrumbs) => {\n  return breadcrumbs ? (\n    <Breadcrumb>\n      {Object.values(breadcrumbs).map((item) =>\n        item.title ? (\n          <BreadcrumbItem key={item.title} isActive={item.isActive}>\n            {(item.to && (\n              <NavLink exact to={item.to}>\n                {item.title}\n              </NavLink>\n            )) ||\n              item.title}\n          </BreadcrumbItem>\n        ) : (\n          '/'\n        )\n      )}\n    </Breadcrumb>\n  ) : null;\n};\n\nBreadcrumbs.propTypes = {\n  breadcrumbs: PropTypes.object,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\n\nconst NoAdditionalRepositories = () => {\n  return (\n    <>\n      <EmptyState>\n        <EmptyStateIcon icon={AddCircleOIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No additional repositories\n        </Title>\n        <EmptyStateBody>\n          You currently have no additional repositories to display.\n        </EmptyStateBody>\n      </EmptyState>\n    </>\n  );\n};\n\nexport default NoAdditionalRepositories;\n","import React from 'react';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n} from '@patternfly/react-table';\nimport propTypes from 'prop-types';\nimport NoAdditionalRepositories from './NoAdditionalRepositories';\n\nconst AdditionalRepositoriesTable = (props) => {\n  const { repositories } = props;\n  const columnNames = {\n    repositoryLabel: 'Label',\n    repositoryName: 'Name',\n  };\n  if (repositories.length > 0) {\n    return (\n      <TableComposable aria-label=\"ActivationKeys\">\n        <Thead>\n          <Tr ouiaSafe={true}>\n            <Th width={40}>{columnNames.repositoryName}</Th>\n            <Th>{columnNames.repositoryLabel}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {repositories.map((repository) => {\n            return (\n              <Tr key={repository.repositoryName} ouiaSafe={true}>\n                <Td dataLabel={columnNames.repositoryName}>\n                  {repository.repositoryName}\n                </Td>\n                <Td dataLabel={columnNames.repositoryLabel}>\n                  {repository.repositoryLabel}\n                </Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </TableComposable>\n    );\n  } else {\n    return <NoAdditionalRepositories />;\n  }\n};\n\nAdditionalRepositoriesTable.propTypes = {\n  repositories: propTypes.array,\n};\n\nexport default AdditionalRepositoriesTable;\n","import React from 'react';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Title,\n} from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport AdditionalRepositoriesTable from '../AdditionalRepositoriesTable';\n\nconst AdditionalRepositoriesCard = (props) => {\n  const { activationKey } = props;\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>\n          <Title headingLevel=\"h2\"> Additional repositories</Title>\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <TextContent>\n          <Text component={TextVariants.p}>\n            The core repositories for your operating system version, for example\n            BaseOS and AppStream, are always enabled and do not need to be\n            explicitly added to the activation key.\n          </Text>\n        </TextContent>\n        <AdditionalRepositoriesTable\n          repositories={activationKey.additionalRepositories}\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nAdditionalRepositoriesCard.propTypes = {\n  activationKey: propTypes.object,\n};\n\nexport default AdditionalRepositoriesCard;\n","import React from 'react';\nimport {\n  TextContent,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Title,\n} from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SystemPurposeCard = (props) => {\n  const { activationKey } = props;\n  const notDefinedText = 'Not defined';\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>\n          <Title headingLevel=\"h2\">System Purpose</Title>\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <TextContent>\n          <TextList component={TextListVariants.dl}>\n            <TextListItem component={TextListItemVariants.dt}>\n              Role\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {activationKey && activationKey.role\n                ? activationKey.role\n                : notDefinedText}\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dt}>SLA</TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {activationKey && activationKey.serviceLevel\n                ? activationKey.serviceLevel\n                : notDefinedText}\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dt}>\n              Usage\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {activationKey && activationKey.usage\n                ? activationKey.usage\n                : notDefinedText}\n            </TextListItem>\n          </TextList>\n        </TextContent>\n      </CardBody>\n    </Card>\n  );\n};\n\nSystemPurposeCard.propTypes = {\n  activationKey: propTypes.object,\n};\n\nexport default SystemPurposeCard;\n","import React from 'react';\nimport {\n  TextContent,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Title,\n} from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst WorkloadCard = (props) => {\n  const { activationKey } = props;\n  const notDefinedText = 'Not defined';\n  return (\n    <Card style={{ minHeight: '100%' }}>\n      <CardHeader>\n        <CardTitle>\n          <Title headingLevel=\"h2\">Workload</Title>\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <TextContent>\n          <TextList component={TextListVariants.dl}>\n            <TextListItem component={TextListItemVariants.dt}>\n              Release version\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {activationKey && activationKey.releaseVersion\n                ? activationKey.releaseVersion\n                : notDefinedText}\n            </TextListItem>\n          </TextList>\n        </TextContent>\n      </CardBody>\n    </Card>\n  );\n};\n\nWorkloadCard.propTypes = {\n  activationKey: propTypes.object,\n};\n\nexport default WorkloadCard;\n","import React from 'react';\nimport { useQueryClient } from 'react-query';\nimport { Button } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst DeleteButton = (props) => {\n  const queryClient = useQueryClient();\n  const user = queryClient.getQueryData('user');\n  const isDisabled = () => {\n    return !user.rbacPermissions.canWriteActivationKeys;\n  };\n  const { onClick } = props;\n  return (\n    <React.Fragment>\n      <Button onClick={onClick} isDisabled={isDisabled()} variant=\"secondary\">\n        Delete\n      </Button>\n    </React.Fragment>\n  );\n};\n\nDeleteButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst NoAccessPopover = ({ content: Button }) => {\n  return (\n    <React.Fragment>\n      <Tooltip\n        content={<div>For editing access, contact your administrator.</div>}\n      >\n        <div>\n          <Button />\n        </div>\n      </Tooltip>\n    </React.Fragment>\n  );\n};\n\nexport default NoAccessPopover;\n\nNoAccessPopover.propTypes = {\n  content: propTypes.elementType,\n};\n","import NoAccessPopover from './NoAccessPopover';\n\nexport default NoAccessPopover;\n","import React, { useState } from 'react';\nimport { withRouter, useParams, useHistory } from 'react-router-dom';\nimport pckg from '../../../package.json';\nimport Breadcrumbs from '../shared/breadcrumbs';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  Grid,\n  GridItem,\n  Gallery,\n  GalleryItem,\n  Level,\n  LevelItem,\n} from '@patternfly/react-core';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport AdditionalRepositoriesCard from './AdditionalRepositoriesCard';\nimport useActivationKey from '../../hooks/useActivationKey';\nimport Loading from '../LoadingState/Loading';\nimport SystemPurposeCard from './SystemPurposeCard';\nimport WorkloadCard from './WorkloadCard';\nimport NoAccessView from '../ActivationKeys/no-access';\nimport DeleteButton from './DeleteButton';\nimport DeleteActivationKeyConfirmationModal from '../Modals/DeleteActivationKeyConfirmationModal';\nimport NoAccessPopover from '../NoAccessPopover';\nimport { useQueryClient } from 'react-query';\n\nconst ActivationKey = () => {\n  const history = useHistory();\n  const queryClient = useQueryClient();\n  const user = queryClient.getQueryData('user');\n  const { id } = useParams();\n  const { routes: paths } = pckg;\n  const breadcrumbs = [\n    { title: 'Activation Keys', to: paths.activationKeys },\n    { title: id, isActive: true },\n  ];\n  const {\n    isLoading: isKeyLoading,\n    error: keyError,\n    data: activationKey,\n  } = useActivationKey(id);\n  const description =\n    'View and edit details and repositories for this activation key.';\n  const [isDeleteActivationKeyModalOpen, setIsDeleteActivationKeyModalOpen] =\n    useState(false);\n\n  const handleDeleteActivationKeyModalToggle = (keyDeleted) => {\n    setIsDeleteActivationKeyModalOpen(!isDeleteActivationKeyModalOpen);\n    if (keyDeleted === true) {\n      history.push('/activation-keys');\n    }\n  };\n\n  const ButtonWrapper = () => {\n    return (\n      <DeleteButton\n        onClick={handleDeleteActivationKeyModalToggle}\n      ></DeleteButton>\n    );\n  };\n\n  const Page = () => {\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <Level>\n            <LevelItem>\n              <Breadcrumbs {...breadcrumbs} />\n              <PageHeaderTitle title={id} />\n              <TextContent>\n                <Text component={TextVariants.p}>{description}</Text>\n              </TextContent>\n            </LevelItem>\n            <LevelItem>\n              {user.rbacPermissions.canWriteActivationKeys ? (\n                <ButtonWrapper />\n              ) : (\n                <NoAccessPopover content={ButtonWrapper} />\n              )}\n            </LevelItem>\n          </Level>\n        </PageHeader>\n        {isKeyLoading && !keyError ? (\n          <Loading />\n        ) : (\n          <React.Fragment>\n            <Main>\n              <Grid hasGutter>\n                <GridItem span={12}>\n                  <Gallery\n                    hasGutter\n                    minWidths={{\n                      default: '40%',\n                    }}\n                  >\n                    <GalleryItem>\n                      <SystemPurposeCard activationKey={activationKey} />\n                    </GalleryItem>\n                    <GalleryItem>\n                      <WorkloadCard activationKey={activationKey} />\n                    </GalleryItem>\n                  </Gallery>\n                </GridItem>\n                <GridItem span={12}>\n                  <AdditionalRepositoriesCard activationKey={activationKey} />\n                </GridItem>\n              </Grid>\n            </Main>\n            <DeleteActivationKeyConfirmationModal\n              handleModalToggle={handleDeleteActivationKeyModalToggle}\n              isOpen={isDeleteActivationKeyModalOpen}\n              name={id}\n            />\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  if (user.rbacPermissions.canReadActivationKeys) {\n    return <Page />;\n  } else {\n    return <NoAccessView />;\n  }\n};\n\nexport default withRouter(ActivationKey);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport pckg from '../package.json';\nimport Authentication from './Components/Authentication/Authentication';\nimport ActivationKey from './Components/ActivationKey/ActivationKey';\nimport useFeatureFlag from './hooks/useFeatureFlag';\nconst { routes: paths } = pckg;\n\nconst Dashboard = lazy(() =>\n  import(/* webpackChunkName: \"Dashboard\" */ './Routes/Dashboard')\n);\n\nconst ActivationKeys = lazy(() => import('./Components/ActivationKeys'));\n\nexport const Routes = () => {\n  const keyDetailsIsEnabled = useFeatureFlag(\n    'sed-frontend.activationKeysDetailsPage'\n  );\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      }\n    >\n      <Authentication>\n        <Switch>\n          {keyDetailsIsEnabled && (\n            <Route path={paths.activationKey} component={ActivationKey} />\n          )}\n          <Route path={paths.activationKeys} component={ActivationKeys} />\n\n          <Route path={paths.connector} component={Dashboard} />\n        </Switch>\n      </Authentication>\n    </Suspense>\n  );\n};\n","import React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n} from '@patternfly/react-core';\nimport useNotifications from '../../hooks/useNotifications';\n\nconst Notifications = () => {\n  const { notifications, removeNotification } = useNotifications();\n\n  return (\n    <AlertGroup isToast>\n      {notifications.map((notification, i) => (\n        <Alert\n          isLiveRegion\n          timeout={notification.timeout}\n          title={notification.message}\n          variant={notification.variant}\n          key={notification.key}\n          actionClose={\n            <AlertActionCloseButton\n              data-testid={`notification-close-btn-${i}`}\n              title={notification.message}\n              variantLabel={`${notification.variant} alert`}\n              onClose={() => {\n                removeNotification(notification.key);\n                if (notification?.downloadHref) {\n                  window.URL.revokeObjectURL(notification.downloadHref);\n                }\n              }}\n            />\n          }\n        />\n      ))}\n    </AlertGroup>\n  );\n};\n\nexport default Notifications;\n","import React, { useEffect, useContext, useMemo } from 'react';\nimport { Routes } from './Routes';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { RegistryContext } from './store';\nimport { useHistory } from 'react-router-dom';\nimport NotificationProvider from './contexts/NotificationProvider';\nimport Notifications from './Components/Notifications';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 3,\n      retryDelay: 10 * 1000,\n      staleTime: Infinity,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n    },\n  },\n});\n\nconst App = () => {\n  const { getRegistry } = useContext(RegistryContext);\n  const history = useHistory();\n  useEffect(() => {\n    getRegistry().register({ notifications: notificationsReducer });\n  }, [getRegistry]);\n\n  const appNavClick = useMemo(\n    () => ({\n      settings(redirect) {\n        insights?.chrome?.appNavClick({ id: 'settings', redirect });\n      },\n      activationKeys(redirect) {\n        insights?.chrome?.appNavClick({ id: 'activationKeys', redirect });\n      },\n    }),\n    []\n  );\n\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome.identifyApp('connector');\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n        appNavClick[event.navId] !== undefined\n          ? appNavClick[event.navId](true)\n          : appNavClick.settings(true);\n      }\n    });\n    return () => unregister();\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <NotificationsPortal />\n      <NotificationProvider>\n        <Notifications />\n        <Routes />\n      </NotificationProvider>\n    </QueryClientProvider>\n  );\n};\nexport default App;\n","import {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport React from 'react';\n\nconst NoAccessView = () => (\n  <Bullseye>\n    <EmptyState>\n      <EmptyStateIcon icon={LockIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        Activation keys can only be accessed by organization administrators.\n      </Title>\n      <EmptyStateBody>\n        If you already know your organization ID and activation key, you can\n        register systems with RHC.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoAccessView;\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Loading = () => {\n  return (\n    <Bullseye>\n      <Spinner />\n    </Bullseye>\n  );\n};\n\nexport default Loading;\n","import { useMutation } from 'react-query';\nconst deleteActivationKeyMutation = async (name) => {\n  const token = await window.insights.chrome.auth.getToken();\n  const response = await fetch(`/api/rhsm/v2/activation_keys/${name}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\n      `Status Code ${response.status}.  Error deleting activation key: ${response.statusText}.`\n    );\n  }\n};\n\nconst useDeleteActivationKey = () => {\n  return useMutation(deleteActivationKeyMutation);\n};\n\nexport { useDeleteActivationKey as default };\n","import * as React from 'react';\nimport {\n  Button,\n  Modal,\n  ModalVariant,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport useDeleteActivationKey from '../../hooks/useDeleteActivationKey';\nimport useNotifications from '../../hooks/useNotifications';\nimport Loading from '../LoadingState/Loading';\nimport { useQueryClient } from 'react-query';\n\nconst DeleteActivationKeyConfirmationModal = (props) => {\n  const { isOpen, handleModalToggle, name } = props;\n  const { addSuccessNotification, addErrorNotification } = useNotifications();\n  const { mutate, isLoading } = useDeleteActivationKey();\n  const queryClient = useQueryClient();\n\n  const deleteActivationKey = (name) => {\n    mutate(name, {\n      onSuccess: (_data, name) => {\n        queryClient.setQueryData('activation_keys', (oldData) =>\n          oldData.filter((entry) => entry.name != name)\n        );\n        addSuccessNotification(`Activation Key ${name} deleted`);\n        handleModalToggle(true);\n      },\n      onError: () => {\n        addErrorNotification('Something went wrong. Please try again');\n        handleModalToggle();\n      },\n    });\n    mutate;\n  };\n  const actions = [\n    <Button\n      key=\"confirm\"\n      variant=\"danger\"\n      onClick={() => deleteActivationKey(name)}\n      data-testid=\"delete-activation-key-confirmation-modal-confirm-button\"\n    >\n      Delete\n    </Button>,\n    <Button key=\"cancel\" variant=\"link\" onClick={handleModalToggle}>\n      Cancel\n    </Button>,\n  ];\n\n  const title = (\n    <>\n      <TextContent>\n        <Text component={TextVariants.h2}>\n          <ExclamationTriangleIcon size=\"md\" color=\"#F0AB00\" /> Delete\n          Activation Key?\n        </Text>\n      </TextContent>\n    </>\n  );\n  const content = () => {\n    if (isLoading) {\n      return <Loading />;\n    } else {\n      return (\n        <TextContent>\n          <Text component={TextVariants.p}>\n            <b>{name}</b> will no longer be available for use. This operation\n            cannot be undone.\n          </Text>\n        </TextContent>\n      );\n    }\n  };\n\n  return (\n    <Modal\n      title={title}\n      isOpen={isOpen}\n      onClose={handleModalToggle}\n      variant={ModalVariant.small}\n      actions={actions}\n    >\n      {content()}\n    </Modal>\n  );\n};\n\nDeleteActivationKeyConfirmationModal.propTypes = {\n  isOpen: propTypes.bool.isRequired,\n  handleModalToggle: propTypes.func.isRequired,\n  name: propTypes.string.isRequired,\n};\n\nexport default DeleteActivationKeyConfirmationModal;\n","import React, { useState } from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { v4 as uuid } from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst NotificationContext = React.createContext({\n  notifications: [],\n  addNotification: () => null,\n  removeNotification: () => null,\n});\n\nconst NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const buildNotificationProps = (variant, message, options) => {\n    const notificationKey = uuid();\n    const notificationProps = {\n      variant: variant,\n      message: message,\n      key: notificationKey,\n      timeout: options?.hasTimeout ?? true,\n    };\n\n    if (options && options.alertLinkText && options.alertLinkHref) {\n      const linkAttributes = options.alertLinkIsDownload\n        ? { download: '' }\n        : {};\n      const alertLink = (\n        <>\n          <AlertActionLink>\n            <a href={options.alertLinkHref} {...linkAttributes}>\n              {options.alertLinkText}\n            </a>\n          </AlertActionLink>\n        </>\n      );\n      notificationProps.actionLinks = alertLink;\n    }\n\n    if (options && options.alertLinkIsDownload && options.alertLinkHref) {\n      notificationProps.downloadHref = options.alertLinkHref;\n    }\n\n    return notificationProps;\n  };\n\n  const addNotification = (variant, message, options) => {\n    const newNotificationProps = buildNotificationProps(\n      variant,\n      message,\n      options\n    );\n\n    let newNotifications = [...notifications, { ...newNotificationProps }];\n\n    if (options && options.keyOfAlertToReplace) {\n      newNotifications = newNotifications.filter(\n        (notification) => notification.key !== options.keyOfAlertToReplace\n      );\n    }\n\n    setNotifications(newNotifications);\n    return newNotificationProps.key;\n  };\n\n  const removeNotification = (key) => {\n    setNotifications(\n      notifications.filter((notification) => notification.key !== key)\n    );\n  };\n\n  const contextValue = {\n    notifications,\n    addNotification: (variant, message, options) => {\n      return addNotification(variant, message, options);\n    },\n    removeNotification: (key) => removeNotification(key),\n  };\n\n  return (\n    <NotificationContext.Provider value={contextValue}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nNotificationProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport { NotificationContext, NotificationProvider as default };\n","import { useQuery } from 'react-query';\n\nconst fetchActivationKeyData = async (keyName) => {\n  if (!keyName) {\n    return false;\n  }\n  const token = await window.insights.chrome.auth.getToken();\n\n  const response = await fetch(`/api/rhsm/v2/activation_keys/${keyName}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  const activationKeysData = await response.json();\n\n  return activationKeysData.body;\n};\n\nconst getActivationKey = async (keyName) => {\n  const keysData = await fetchActivationKeyData(keyName);\n  return keysData;\n};\n\nconst useActivationKey = (keyName) => {\n  return useQuery(`activation_key_${keyName}`, () => getActivationKey(keyName));\n};\n\nexport { useActivationKey as default };\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport default (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n  return flagsReady ? isFlagEnabled : false;\n};\n","import { useContext } from 'react';\nimport { NotificationContext } from '../contexts/NotificationProvider';\n\nconst useNotifications = () => {\n  const { notifications, addNotification, removeNotification } =\n    useContext(NotificationContext);\n\n  const addSuccessNotification = (message, options) => {\n    return addNotification('success', message, options);\n  };\n\n  const addErrorNotification = (message, options) => {\n    return addNotification('danger', message, options);\n  };\n\n  const addInfoNotification = (message, options) => {\n    return addNotification('info', message, options);\n  };\n\n  return {\n    notifications,\n    addSuccessNotification,\n    addErrorNotification,\n    addInfoNotification,\n    removeNotification,\n  };\n};\n\nexport default useNotifications;\n","import { createContext } from 'react';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n"],"names":["getUserRbacPermissions","Promise","resolve","window","insights","chrome","getUserPermissions","then","rawRbacPermissions","permissions","map","rawPermission","permission","canReadActivationKeys","includes","canWriteActivationKeys","authenticateUser","auth","getUser","e","Error","message","Authentication","children","queryClient","useQueryClient","location","useLocation","useQuery","all","userStatus","rbacPermissions","accountNumber","identity","account_number","orgId","internal","org_id","isLoading","isFetching","isSuccess","isError","useEffect","hideGlobalFilter","invalidateQueries","pathname","Unavailable","Loading","propTypes","Breadcrumbs","breadcrumbs","Breadcrumb","Object","values","item","title","BreadcrumbItem","key","isActive","to","NavLink","exact","PropTypes","EmptyState","EmptyStateIcon","icon","AddCircleOIcon","Title","headingLevel","size","EmptyStateBody","AdditionalRepositoriesTable","props","repositories","columnNames","length","TableComposable","Thead","Tr","ouiaSafe","Th","width","Tbody","repository","repositoryName","Td","dataLabel","repositoryLabel","AdditionalRepositoriesCard","activationKey","Card","CardHeader","CardTitle","CardBody","TextContent","Text","component","TextVariants","additionalRepositories","SystemPurposeCard","notDefinedText","TextList","TextListVariants","TextListItem","TextListItemVariants","role","serviceLevel","usage","WorkloadCard","style","minHeight","releaseVersion","DeleteButton","user","getQueryData","onClick","Button","isDisabled","variant","NoAccessPopover","content","Tooltip","withRouter","history","useHistory","id","useParams","pckg","activationKeys","useActivationKey","isKeyLoading","keyError","error","data","useState","isDeleteActivationKeyModalOpen","setIsDeleteActivationKeyModalOpen","handleDeleteActivationKeyModalToggle","keyDeleted","push","ButtonWrapper","Page","PageHeader","Level","LevelItem","PageHeaderTitle","Main","Grid","hasGutter","GridItem","span","Gallery","minWidths","default","GalleryItem","DeleteActivationKeyConfirmationModal","handleModalToggle","isOpen","name","paths","Dashboard","lazy","ActivationKeys","Routes","keyDetailsIsEnabled","useFeatureFlag","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","ActivationKey","connector","useNotifications","notifications","removeNotification","AlertGroup","isToast","notification","i","Alert","isLiveRegion","timeout","actionClose","AlertActionCloseButton","variantLabel","onClose","downloadHref","URL","revokeObjectURL","QueryClient","defaultOptions","queries","retry","retryDelay","staleTime","Infinity","refetchOnWindowFocus","refetchOnMount","getRegistry","useContext","RegistryContext","register","notificationsReducer","appNavClick","useMemo","settings","redirect","init","identifyApp","unregister","on","event","domEvent","navId","undefined","QueryClientProvider","client","NotificationProvider","LockIcon","deleteActivationKeyMutation","getToken","token","fetch","method","headers","Authorization","response","ok","status","statusText","addSuccessNotification","addErrorNotification","useMutation","mutate","actions","onSuccess","_data","setQueryData","oldData","filter","entry","onError","deleteActivationKey","color","Modal","ModalVariant","NotificationContext","React","addNotification","setNotifications","contextValue","options","newNotificationProps","notificationProps","uuid","hasTimeout","alertLinkText","alertLinkHref","linkAttributes","alertLinkIsDownload","download","alertLink","AlertActionLink","href","actionLinks","buildNotificationProps","newNotifications","keyOfAlertToReplace","Provider","value","fetchActivationKeyData","keyName","json","activationKeysData","body","getActivationKey","keysData","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","addInfoNotification","createContext","middleware","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}