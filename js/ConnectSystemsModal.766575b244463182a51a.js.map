{"version":3,"sources":["webpack://sed-frontend/./src/Components/ConnectSystemsModal/ConnectSystemsModal.scss","webpack://sed-frontend/./src/Components/ConnectSystemsModal/ConnectSystemsModal.js","webpack://sed-frontend/./src/Components/ConnectSystemsModal/ConnectSystemsModal.scss?dc22"],"names":["___CSS_LOADER_EXPORT___","push","module","id","paths","pckg","CopyHelperText","FormHelperText","isHidden","className","useHistory","Modal","variant","ModalVariant","title","isOpen","onClose","connector","TextContent","Text","href","component","target","rel","FormGroup","label","helperText","ClipboardCopy","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"6KAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,6EAA8E,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,2EAA2E,MAAQ,GAAG,SAAW,mBAAmB,eAAiB,CAAC,mFAAmF,WAAa,MAExX,W,oHCSgBC,G,kBAAUC,IAEpBC,EAAiB,kBACrB,kBAAC,EAAAC,eAAD,CAAgBC,UAAU,EAAOC,UAAU,cAA3C,aACY,kBAAC,KAAD,MADZ,wDA0DF,QArD4B,WAAM,IACxBR,GAASS,kBAATT,KAER,OACE,kBAAC,EAAAU,MAAD,CACEC,QAASC,sBACTC,MAAM,yCACNC,QAAQ,EACRC,QAAS,kBAAMf,EAAKG,EAAMa,YAC1BR,UAAU,aAEV,kBAAC,EAAAS,YAAD,KACE,kBAAC,EAAAC,KAAD,CAAMV,UAAU,aAAhB,qFAIA,kBAAC,EAAAU,KAAD,sCACA,kBAAC,EAAAA,KAAD,CAAMV,UAAU,cAAhB,wDAGA,kBAAC,EAAAU,KAAD,qDACgD,IAC9C,kBAAC,EAAAA,KAAD,CACEC,KAAK,0BACLC,UAAU,IACVC,OAAO,SACPC,IAAI,uBAJN,0BAFF,KAYA,yBAAKd,UAAU,yDACb,kBAAC,EAAAe,UAAD,CACEC,MAAM,kCACNC,WAAY,kBAACpB,EAAD,OAEZ,kBAAC,EAAAqB,cAAD,oEAIF,kBAAC,EAAAH,UAAD,CACEC,MAAM,wCACNC,WAAY,kBAACpB,EAAD,OAEZ,kBAAC,EAAAqB,cAAD,oD,gEC7DRC,EAAS,IAAI,UALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,kBAAkB1B,EAAO2B,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,iBAEhB7B,EAAO2B,IAAIG,OACT,OACA,eAnCkB,SAAuBC,EAAGC,EAAGC,GACnD,IAAKF,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIE,EAEJ,IAAKA,KAAKH,EACR,GAKIA,EAAEG,KAAOF,EAAEE,GACb,OAAO,EAIX,IAAKA,KAAKF,EACR,IAKKD,EAAEG,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcN,EAAW,mBAMxBA,EAAY,iBAEZH,EAAO,YAPL1B,EAAO2B,IAAIC,gBAYzB5B,EAAO2B,IAAIS,SAAQ,WACjBV,OAIW","file":"js/ConnectSystemsModal.766575b244463182a51a.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".connector .inc-c-connector__connect-systems-modal-form{max-width:512px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/ConnectSystemsModal/ConnectSystemsModal.scss\"],\"names\":[],\"mappings\":\"AAAA,wDAC6C,eAAe\",\"sourcesContent\":[\".connector{\\n.inc-c-connector__connect-systems-modal-form{max-width:512px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React from 'react';\nimport {\n  ClipboardCopy,\n  FormGroup,\n  FormHelperText,\n  Modal,\n  ModalVariant,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport { CopyIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nimport './ConnectSystemsModal.scss';\n\nimport pckg from '../../../package.json';\nconst { routes: paths } = pckg;\n\nconst CopyHelperText = () => (\n  <FormHelperText isHidden={false} className=\"pf-u-mt-sm\">\n    Click the <CopyIcon /> icon on a row to copy the command with your values\n  </FormHelperText>\n);\n\nconst ConnectSystemsModal = () => {\n  const { push } = useHistory();\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title=\"Connect systems with Red Hat connector\"\n      isOpen={true}\n      onClose={() => push(paths.connector)}\n      className=\"connector\"\n    >\n      <TextContent>\n        <Text className=\"pf-u-mb-0\">\n          Red Hat connector allows you to connect your systems to Red Hat with\n          one command.\n        </Text>\n        <Text>Connect, register and manage.</Text>\n        <Text className=\"pf-u-mb-sm\">\n          Red Hat connector is for RHEL 8.4 systems and newer.\n        </Text>\n        <Text>\n          To register other RHEL systems, check out the{' '}\n          <Text\n            href=\"./insights/registration\"\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Registration Assistant\n          </Text>\n          .\n        </Text>\n        <div className=\"pf-c-form inc-c-connector__connect-systems-modal-form\">\n          <FormGroup\n            label=\"Register with an activation key\"\n            helperText={<CopyHelperText />}\n          >\n            <ClipboardCopy>\n              rhc --connect -[activationkey-namehere] -[organization ID]\n            </ClipboardCopy>\n          </FormGroup>\n          <FormGroup\n            label=\"Register with a username and password\"\n            helperText={<CopyHelperText />}\n          >\n            <ClipboardCopy>rhc --connect -[username] -[password]</ClipboardCopy>\n          </FormGroup>\n        </div>\n      </TextContent>\n    </Modal>\n  );\n};\n\nexport default ConnectSystemsModal;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ConnectSystemsModal.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ConnectSystemsModal.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}