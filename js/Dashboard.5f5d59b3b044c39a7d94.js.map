{"version":3,"sources":["webpack://sed-frontend/./src/Components/NavTabs/nav-tabs.scss","webpack://sed-frontend/./src/Routes/Dashboard/dashboard.scss","webpack://sed-frontend/./src/Components/NavTabs/index.js","webpack://sed-frontend/./src/Routes/Dashboard/SampleTabRoute.js","webpack://sed-frontend/./src/Components/ConfirmChangesModal/index.js","webpack://sed-frontend/./src/Components/ConnectLog/LogNestedtable.js","webpack://sed-frontend/./src/Components/ConnectLog/index.js","webpack://sed-frontend/./src/Routes/Dashboard/index.js","webpack://sed-frontend/./src/Components/NavTabs/nav-tabs.scss?5a62","webpack://sed-frontend/./src/Routes/Dashboard/dashboard.scss?8482"],"names":["___CSS_LOADER_EXPORT___","push","module","id","NavTabs","tabItems","TabsProps","className","useHistory","useLocation","pathname","search","activeTab","find","tabPathname","includes","Tabs","classnames","activeKey","eventKey","onSelect","_event","tabIndex","map","item","Tab","key","propTypes","PropTypes","title","Stack","hasGutter","StackItem","Title","headingLevel","size","TextContent","Text","component","Switch","aria-label","label","Fragment","val","ConfirmChangesModal","isOpen","handleCancel","handleConfirm","Modal","variant","onClose","actions","Button","type","onClick","href","columns","transforms","sortable","initialRows","DateFormat","date","Date","status","color","useState","rows","sortBy","setRows","PrimaryToolbar","filterConfig","onChange","_e","value","console","log","pagination","Pagination","page","perPage","itemCount","Table","onSort","index","direction","newRows","sort","a","b","SortByDirection","reverse","cells","TableHeader","TableBody","cellFormatters","expandable","parent","ConnectLog","TableVariant","onCollapse","event","rowKey","row","Level","LevelItem","confirmChangesOpen","setConfirmChangesOpen","logsOpen","setLogsOpen","wasConfirmed","setWasConfirmed","dispatch","useDispatch","useEffect","insights","chrome","appAction","listener","setTimeout","clearTimeout","PageHeader","PageHeaderTitle","Popover","headerContent","bodyContent","position","Main","Flex","alignContent","default","alignItems","Divider","isVertical","Route","path","addNotification","description","update","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/Dashboard.5f5d59b3b044c39a7d94.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sed .ins-c-navtabs .pf-c-tabs__list{max-width:100%}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/NavTabs/nav-tabs.scss\"],\"names\":[],\"mappings\":\"AAAA,qCACgC,cAAc\",\"sourcesContent\":[\".sed{\\n.ins-c-navtabs .pf-c-tabs__list{max-width:100%}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sed .dashboard__content{min-height:100%;background-color:var(--pf-global--BackgroundColor--100)}.sed .dashboard__header{display:flex;align-items:end}.sed .dashboard__success-status{color:var(--pf-global--success-color--100)}.sed .dashboard__navtab-title{width:100%}.sed .dashboard__tabs-content{display:flex}.sed .dashboard__tabs-nav{flex-shrink:0}.sed .dashboard__sample-route{border-left:1px solid var(--pf-global--BorderColor--100)}.sed .dashboard__in-progress-text{color:var(--pf-global--palette--blue-500)}.sed .dashboard__in-progress-text>svg{color:initial}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Routes/Dashboard/dashboard.scss\"],\"names\":[],\"mappings\":\"AAAA,yBACoB,eAAe,CAAC,uDAAuD,CAD3F,wBAC+G,YAAY,CAAC,eAAe,CAD3I,gCACuK,0CAA0C,CADjN,8BAC2O,UAAU,CADrP,8BAC+Q,YAAY,CAD3R,0BACiT,aAAa,CAD9T,8BACwV,wDAAwD,CADhZ,kCAC8a,yCAAyC,CADvd,sCACyf,aAAa\",\"sourcesContent\":[\".sed{\\n.dashboard__content{min-height:100%;background-color:var(--pf-global--BackgroundColor--100)}.dashboard__header{display:flex;align-items:end}.dashboard__success-status{color:var(--pf-global--success-color--100)}.dashboard__navtab-title{width:100%}.dashboard__tabs-content{display:flex}.dashboard__tabs-nav{flex-shrink:0}.dashboard__sample-route{border-left:1px solid var(--pf-global--BorderColor--100)}.dashboard__in-progress-text{color:var(--pf-global--palette--blue-500)}.dashboard__in-progress-text>svg{color:initial}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport classnames from 'classnames';\n\nimport './nav-tabs.scss';\n\nconst NavTabs = ({ tabItems, TabsProps: { className, ...TabsProps } }) => {\n  const { push } = useHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ pathname: tabPathname }) =>\n    pathname.includes(tabPathname)\n  );\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].pathname, search });\n\n  return (\n    <Tabs\n      {...TabsProps}\n      className={classnames('ins-c-navtabs', className)}\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab key={item.eventKey} {...item} />\n      ))}\n    </Tabs>\n  );\n};\n\nNavTabs.propTypes = {\n  tabItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      eventKey: PropTypes.number.isRequired,\n      title: PropTypes.node.isRequired,\n    })\n  ),\n  TabsProps: PropTypes.object,\n};\n\nexport default NavTabs;\n","import React, { Fragment } from 'react';\nimport {\n  Stack,\n  StackItem,\n  Switch,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\n\nimport '@patternfly/react-styles/css/components/Table/table.css';\n\nconst SampleTabRoute = () => {\n  return (\n    <Stack hasGutter className=\"dashboard__sample-route pf-u-p-md\">\n      <StackItem>\n        <Title headingLevel=\"h2\" size=\"2xl\">\n          Red hat Insights\n        </Title>\n        <TextContent>\n          <Text component=\"p\">\n            Esse culpa anim do incididunt non cillum nisi esse officia. Culpa\n            elit amet dolore aliqua veniam adipisicing qui anim ea magna. Est\n            anim ex proident tempor nostrud. Veniam aliqua sunt est Lorem\n            proident voluptate. Laboris labore mollit irure officia. Dolore sit\n            velit cillum ut irure esse velit exercitation esse consectetur.\n            Aliquip reprehenderit duis deserunt fugiat proident ex in eiusmod\n            pariatur ipsum sint. Lorem ipsum reprehenderit veniam in esse velit\n            qui ad. Reprehenderit laborum laboris aute ipsum.\n          </Text>\n        </TextContent>\n      </StackItem>\n      <StackItem>\n        <Title headingLevel=\"h3\" size=\"xl\">\n          Settings\n        </Title>\n        <Stack hasGutter className=\"pf-u-mt-lg\">\n          <StackItem>\n            <Switch\n              id=\"top-foo\"\n              aria-label=\"foo\"\n              label={\n                <Fragment>\n                  <Title headingLevel=\"h4\" size=\"md\">\n                    Connect to Red Hat Insights\n                  </Title>\n                  <TextContent>\n                    <Text component=\"small\">\n                      Id culpa nostrud magna cupidatat commodo dolor tempor enim\n                      nisi irure duis sunt. Amet commodo dolore adipisicing\n                      velit aliquip est. Id laboris aute pariatur nulla. Fugiat\n                      qui exercitation ad sit. Dolore sit eiusmod et cupidatat\n                      qui cillum nulla pariatur consequat nulla irure deserunt\n                      incididunt esse.\n                    </Text>\n                  </TextContent>\n                </Fragment>\n              }\n            />\n            <div className=\"pf-u-pl-3xl\">\n              {[1, 2, 3].map((val) => (\n                <Switch\n                  className=\"pf-u-mt-md\"\n                  key={val}\n                  id={`${val}-nested-switch`}\n                  aria-label={`${val}-nested-switch`}\n                  label={\n                    <Fragment>\n                      <Title headingLevel=\"h4\" size=\"md\">\n                        Nested switch {val}\n                      </Title>\n                      <TextContent>\n                        <Text component=\"small\">\n                          Id culpa nostrud magna cupidatat commodo dolor tempor\n                          enim nisi irure duis sunt. Amet commodo dolore\n                          adipisicing velit aliquip est. Id laboris aute\n                          pariatur nulla. Fugiat qui exercitation ad sit. Dolore\n                          sit eiusmod et cupidatat qui cillum nulla pariatur\n                          consequat nulla irure deserunt incididunt esse.\n                        </Text>\n                      </TextContent>\n                    </Fragment>\n                  }\n                />\n              ))}\n            </div>\n          </StackItem>\n          <StackItem>\n            <Title headingLevel=\"h3\" size=\"xl\">\n              Exclusions\n            </Title>\n            <table className=\"pf-c-table pf-m-grid-md\">\n              <thead>\n                <tr>\n                  <th>Condition</th>\n                  <th>Settings</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>tag=&quot;prod&quot;</td>\n                  <td>Red Hat Insights - Off</td>\n                </tr>\n                <tr>\n                  <td>tag=&quot;dev&quot;</td>\n                  <td>\n                    Red Hat Insights - On\n                    <br />\n                    YARA - On\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default SampleTabRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Text, TextContent } from '@patternfly/react-core';\n\nconst ConfirmChangesModal = ({\n  isOpen = false,\n  handleCancel,\n  handleConfirm,\n}) => {\n  return (\n    <Modal\n      variant=\"small\"\n      title=\"Confirm changes\"\n      isOpen={isOpen}\n      onClose={handleCancel}\n      actions={[\n        <Button\n          key=\"confirm\"\n          variant=\"primary\"\n          type=\"button\"\n          onClick={handleConfirm}\n        >\n          Confirm changes\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"link\"\n          type=\"button\"\n          onClick={handleCancel}\n        >\n          Confirm Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component=\"p\">\n          Your changes applies to <b>1032 connected systems</b>. Selected\n          settings will also be applied to <b>all future systems</b> that are\n          connect through Red Hat Connect (rhc).\n        </Text>\n        <Text component=\"p\">\n          Upon confirmation, an Ansible Playbook will be pushed to 1032 systems\n          to apply changes.\n        </Text>\n      </TextContent>\n      <a href=\"#\">View playbook</a>\n    </Modal>\n  );\n};\n\nConfirmChangesModal.propTypes = {\n  isOpen: PropTypes.bool,\n  handleConfirm: PropTypes.func.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n};\n\nexport default ConfirmChangesModal;\n","import React, { Fragment, useState } from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { Pagination } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst columns = [\n  { title: 'System', transforms: [sortable] },\n  {\n    title: 'Last attempt date/time',\n    transforms: [sortable],\n  },\n  { title: 'Status', transforms: [sortable] },\n  '',\n];\n\nconst initialRows = [\n  [\n    'ipareplica8.example.lab',\n    <Fragment key=\"date\">\n      <DateFormat date={new Date()} type=\"exact\" />\n    </Fragment>,\n    <Fragment key={status}>\n      <div>\n        <CheckCircleIcon color=\"green\" />\n        &nbsp; Success\n      </div>\n    </Fragment>,\n    <Fragment key=\"download\">\n      <a href=\"#\">Download log</a>\n    </Fragment>,\n  ],\n  [\n    'r720.valleedelisle.nat',\n    <Fragment key=\"date\">\n      <DateFormat date={new Date()} type=\"exact\" />\n    </Fragment>,\n    <Fragment key={status}>\n      <div>\n        <ExclamationCircleIcon color=\"red\" />\n        &nbsp; Failure - Retried x23\n      </div>\n    </Fragment>,\n    <Fragment key=\"download\">\n      <a href=\"#\">Download log</a>\n    </Fragment>,\n  ],\n];\n\nconst LogNestedTable = () => {\n  const [{ rows, sortBy }, setRows] = useState({\n    rows: initialRows,\n    sortBy: {},\n  });\n  const onSort = (_event, index, direction) => {\n    setRows(({ rows }) => {\n      const newRows = rows.sort((a, b) =>\n        a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0\n      );\n      return {\n        sortBy: {\n          index,\n          direction,\n        },\n        rows: direction === SortByDirection.asc ? newRows : newRows.reverse(),\n      };\n    });\n  };\n\n  return (\n    <div>\n      <PrimaryToolbar\n        filterConfig={{\n          onChange: (_e, value) => console.log({ value }),\n          value: 'text',\n        }}\n        pagination={<Pagination page={1} perPage={20} itemCount={7} />}\n      />\n      <Table\n        aria-label=\"Sortable Table\"\n        sortBy={sortBy}\n        onSort={onSort}\n        cells={columns}\n        rows={rows}\n        variant=\"compact\"\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </div>\n  );\n};\n\nexport default LogNestedTable;\n","import React, { Fragment, useState } from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n  expandable,\n} from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport { Modal } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { InProgressIcon } from '@patternfly/react-icons';\nimport LogNestedTable from './LogNestedtable';\n\nconst columns = [\n  {\n    title: 'Initiated date/time',\n    cellFormatters: [expandable],\n  },\n  'Initiator',\n  'Status',\n  'Playbook',\n];\n\nconst initialRows = [\n  {\n    isOpen: false,\n    cells: [\n      <Fragment key=\"date\">\n        <DateFormat date={new Date()} type=\"exact\" />\n      </Fragment>,\n      'John Doe',\n      <Fragment key=\"status\">\n        <div>\n          <InProgressIcon />\n          &nbsp; In progress\n        </div>\n      </Fragment>,\n      <Fragment key=\"download\">\n        <a href=\"#\">Download</a>\n      </Fragment>,\n    ],\n  },\n  {\n    parent: 0,\n    cells: [\n      <Fragment key=\"nested-table\">\n        <LogNestedTable />\n      </Fragment>,\n    ],\n  },\n  {\n    isOpen: false,\n    cells: [\n      <Fragment key=\"date\">\n        <DateFormat date={new Date()} type=\"exact\" />\n      </Fragment>,\n      'John Doe',\n      <Fragment key=\"status\">\n        <div>\n          <InProgressIcon />\n          &nbsp; In progress\n        </div>\n      </Fragment>,\n      <Fragment key=\"download\">\n        <a href=\"#\">Download</a>\n      </Fragment>,\n    ],\n  },\n  {\n    parent: 2,\n    cells: [\n      <Fragment key=\"nested-table\">\n        <LogNestedTable />\n      </Fragment>,\n    ],\n  },\n  {\n    isOpen: false,\n    cells: [\n      <Fragment key=\"date\">\n        <DateFormat date={new Date()} type=\"exact\" />\n      </Fragment>,\n      'John Doe',\n      <Fragment key=\"status\">\n        <div>\n          <InProgressIcon />\n          &nbsp; In progress\n        </div>\n      </Fragment>,\n      <Fragment key=\"download\">\n        <a href=\"#\">Download</a>\n      </Fragment>,\n    ],\n  },\n  {\n    parent: 4,\n    cells: [\n      <Fragment key=\"nested-table\">\n        <LogNestedTable />\n      </Fragment>,\n    ],\n  },\n];\n\nconst ConnectLog = ({ isOpen = false, onClose }) => {\n  const [rows, setRows] = useState(initialRows);\n  const onCollapse = (event, rowKey, isOpen) => {\n    setRows((rows) =>\n      rows.map((row, index) => (index === rowKey ? { ...row, isOpen } : row))\n    );\n  };\n\n  return (\n    <Modal\n      title=\"Red Hat connect log\"\n      variant=\"large\"\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <Table\n        aria-label=\"Logs table\"\n        variant={TableVariant.compact}\n        onCollapse={onCollapse}\n        rows={rows}\n        cells={columns}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </Modal>\n  );\n};\n\nConnectLog.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ConnectLog;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport {\n  Button,\n  Divider,\n  Flex,\n  Level,\n  LevelItem,\n  Popover,\n  Stack,\n  StackItem,\n  Text,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  InProgressIcon,\n} from '@patternfly/react-icons';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport './dashboard.scss';\nimport NavTabs from '../../Components/NavTabs';\nimport SampleTabRoute from './SampleTabRoute';\nimport ConfirmChangesModal from '../../Components/ConfirmChangesModal';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ConnectLog from '../../Components/ConnectLog';\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    pathname: '/red-hat-insights',\n    title: (\n      <Level hasGutter className=\"dashboard__navtab-title\">\n        <LevelItem>Red Hat Insights</LevelItem>\n        <LevelItem>\n          <Text component=\"b\">\n            <span className=\"dashboard__success-status\">ON</span>\n          </Text>\n        </LevelItem>\n      </Level>\n    ),\n  },\n  {\n    eventKey: 1,\n    pathname: '/red-hat-subscription-manager',\n    title: (\n      <Level hasGutter className=\"dashboard__navtab-title\">\n        <LevelItem>Red Hat Subscription manager</LevelItem>\n        <LevelItem>\n          <Text component=\"b\">\n            <span className=\"dashboard__success-status\">ON</span>\n          </Text>\n        </LevelItem>\n      </Level>\n    ),\n  },\n];\n\nconst SamplePage = () => {\n  const [confirmChangesOpen, setConfirmChangesOpen] = useState(false);\n  const [logsOpen, setLogsOpen] = useState(false);\n  const [wasConfirmed, setWasConfirmed] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    insights?.chrome?.appAction?.('sample-page');\n  }, []);\n  useEffect(() => {\n    let listener;\n    if (wasConfirmed) {\n      listener = setTimeout(() => {\n        setWasConfirmed(false);\n      }, 5000);\n    }\n    return () => {\n      clearTimeout(listener);\n    };\n  }, [wasConfirmed]);\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={\n            <div className=\"dashboard__header\">\n              Red Hat Connect Dashboard&nbsp;\n              <Popover\n                aria-label=\"connected-dashboard-description\"\n                headerContent={<div>Desc header</div>}\n                bodyContent={<p>Popover description</p>}\n                position=\"bottom\"\n              >\n                <Button variant=\"plain\" className=\"pf-u-p-xs\">\n                  <OutlinedQuestionCircleIcon color=\"grey\" />\n                </Button>\n              </Popover>\n            </div>\n          }\n        />\n      </PageHeader>\n      <Main>\n        <div className=\"dashboard__content\">\n          <Stack className=\"pf-u-p-md\">\n            <StackItem>\n              <Level>\n                <LevelItem>\n                  <Title headingLevel=\"h3\" size=\"md\">\n                    RHEL 8 systems connected\n                  </Title>\n                  <Flex\n                    alignContent={{ default: 'alignContentCenter' }}\n                    alignItems={{ default: 'alignItemsCenter' }}\n                  >\n                    <Title headingLevel=\"h3\" size=\"2xl\">\n                      1032\n                    </Title>\n                    {wasConfirmed && (\n                      <Text\n                        className=\"dashboard__in-progress-text\"\n                        component=\"small\"\n                      >\n                        <InProgressIcon />\n                        &nbsp;Changes being applied\n                      </Text>\n                    )}\n                  </Flex>\n                  <a href=\"#\">\n                    Connect RHEL 6 and 7 systems (link does not work)\n                  </a>\n                </LevelItem>\n                <LevelItem>\n                  <Button onClick={() => setConfirmChangesOpen(true)}>\n                    Save changes\n                  </Button>\n                  <Button onClick={() => setLogsOpen(true)} variant=\"link\">\n                    View log\n                  </Button>\n                </LevelItem>\n              </Level>\n            </StackItem>\n          </Stack>\n          <Divider />\n          <div className=\"dashboard__tabs-content\">\n            <NavTabs\n              tabItems={tabItems}\n              TabsProps={{\n                isVertical: true,\n                className: 'dashboard__tabs-nav pf-u-mr-lg',\n              }}\n            />\n            <Switch>\n              <Route path={tabItems[1].pathname}>\n                <div>No component yet</div>\n              </Route>\n              <Route path={['/', tabItems[0].pathname]}>\n                <SampleTabRoute />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Main>\n      <ConfirmChangesModal\n        isOpen={confirmChangesOpen}\n        handleCancel={() => setConfirmChangesOpen(false)}\n        handleConfirm={() => {\n          setWasConfirmed(true);\n          setConfirmChangesOpen(false);\n          dispatch(\n            addNotification({\n              variant: 'success',\n              title: 'Changes saved',\n              description:\n                'Your service enablement changes are being applied to connected systems',\n            })\n          );\n        }}\n      />\n      <ConnectLog isOpen={logsOpen} onClose={() => setLogsOpen(false)} />\n    </React.Fragment>\n  );\n};\n\nexport default SamplePage;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./nav-tabs.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./nav-tabs.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./dashboard.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./dashboard.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}