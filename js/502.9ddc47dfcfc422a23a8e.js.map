{"version":3,"sources":["webpack://sed-frontend/./src/Routes.js","webpack://sed-frontend/./src/App.js","webpack://sed-frontend/./src/store/index.js"],"names":["paths","Dashboard","lazy","Routes","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","component","props","useEffect","getRegistry","register","notifications","notificationsReducer","insights","chrome","init","identifyApp","on","event","history","push","navId","Fragment","childProps","middleware","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"mappings":"2KAIgBA,E,IAEVC,GAAYC,WAAK,kBACrB,qFAGWC,EAAS,kBACpB,kBAAC,EAAAC,SAAD,CACEC,SACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,QAAD,QAIJ,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,KAAMV,EAAWW,UAAWV,O,gCCOzC,QAnBY,SAACW,GAYX,OAXAC,gBAAU,WAMR,OALiBC,UACRC,SAAS,CAAEC,cAAeC,OACnCC,SAASC,OAAOC,OAEhBF,SAASC,OAAOE,YAAY,OACrBH,SAASC,OAAOG,GAAG,kBAAkB,SAACC,GAAD,O,UACrCX,MAAMY,QAAQC,KAAnB,WAA4BF,EAAMG,aAEnC,IAGD,kBAAC,EAAAC,SAAD,KACE,kBAAC,KAAD,MACA,kBAACxB,EAAD,CAAQyB,WAAYhB,O,4FChBnB,SAASQ,IAAoB,2BAAZS,EAAY,yBAAZA,EAAY,gBAMlC,OALWf,QAAY,GAAD,CACpBgB,KACAC,QAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAFtC,OAGjBH","file":"js/502.9ddc47dfcfc422a23a8e.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport pckg from '../package.json';\nconst { routes: paths } = pckg;\n\nconst Dashboard = lazy(() =>\n  import(/* webpackChunkName: \"Dashboard\" */ './Routes/Dashboard')\n);\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path={paths.sed} component={Dashboard} />\n    </Switch>\n  </Suspense>\n);\n","import React, { Fragment, useEffect } from 'react';\nimport { Routes } from './Routes';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst App = (props) => {\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n    insights.chrome.init();\n\n    insights.chrome.identifyApp('sed');\n    return insights.chrome.on('APP_NAVIGATION', (event) =>\n      this.props.history.push(`/${event.navId}`)\n    );\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </Fragment>\n  );\n};\nexport default App;\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n"],"sourceRoot":""}